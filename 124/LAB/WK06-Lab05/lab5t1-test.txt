Initial 10 numbers unsorted array[9]: value:	5 1 12 21 16 2 14 12 50 7index:	0 1  2  3  4 5  6  7  8 9n=array.length=101.		i=0, smallest=0,n=10	1.1	j=1,smallest=0		arrar[j]=1,array[smallest]=5		array[j]<array[smallest]		smallest=1	1.2	j=2,smallest=1		arrary[j]=12,array[smallest]=1		array[j]>array[smallest]	1.3	j=3,smallest=1		arrary[j]=21,array[smallest]=1		array[j]>array[smallest]		1.4	j=4,smallest=1		arrary[j]=16,array[smallest]=1		array[j]>array[smallest]	1.5	j=5,smallest=1		arrary[j]=2,array[smallest]=1		array[j]>array[smallest]	1.6	j=6,smallest=1		arrary[j]=14,array[smallest]=1		array[j]>array[smallest]	1.7	j=7,smallest=1		arrary[j]=12,array[smallest]=1		array[j]>array[smallest]	1.8	j=8,smallest=1		arrary[j]=50,array[smallest]=1		array[j]>array[smallest]	1.9	j=4,smallest=1		arrary[j]=7,array[smallest]=1		array[j]>array[smallest]		since i=0 and smallest=1, so smallest != i	temp = array[i] = 5	array[i]=array[smallest]=1	array[smallest]=5    sorted	unsortedvalue:	1 5| 12 21 16 2 14 12 50 7index:	0 1   2  3  4 5  6  7  8 92.		i=1, smallest=1,n=10	1.1	j=1,smallest=1		arrar[j]=1,array[smallest]=5		array[j]<array[smallest]		smallest=1	1.2	j=2,smallest=1		arrary[j]=12,array[smallest]=1		array[j]>array[smallest]	1.3	j=3,smallest=1		arrary[j]=21,array[smallest]=1		array[j]>array[smallest]		1.4	j=4,smallest=1		arrary[j]=16,array[smallest]=1		array[j]>array[smallest]	1.5	j=5,smallest=1		arrary[j]=2,array[smallest]=1		array[j]>array[smallest]	1.6	j=6,smallest=1		arrary[j]=14,array[smallest]=1		array[j]>array[smallest]	1.7	j=7,smallest=1		arrary[j]=12,array[smallest]=1		array[j]>array[smallest]	1.8	j=8,smallest=1		arrary[j]=50,array[smallest]=1		array[j]>array[smallest]	1.9	j=4,smallest=1		arrary[j]=7,array[smallest]=1		array[j]>array[smallest]		since i=0 and smallest=1, so smallest != i	temp = array[i] = 5	array[i]=array[smallest]=1	array[smallest]=5void selectionSort(int arr[], int n) {      int i, j, minIndex, tmp;          for (i = 0; i < n - 1; i++) {            minIndex = i;            for (j = i + 1; j < n; j++)                  if (arr[j] < arr[minIndex])                        minIndex = j;            if (minIndex != i) {                  tmp = arr[i];                  arr[i] = arr[minIndex];                  arr[minIndex] = tmp;            }      }}